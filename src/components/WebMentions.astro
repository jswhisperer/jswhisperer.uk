---
import { Image } from 'astro:assets'

interface AuthorProps {
	name: string
	photo: string
	url: string
}

interface WebmentionProps {
	author: AuthorProps
	'wm-received': string
	'wm-property': string
}

interface Props {
	webmentions: WebmentionProps[]
}

const { webmentions } = Astro.props

const showDate = (webmention: string) =>
	new Date(webmention).toLocaleDateString(undefined, {
		day: 'numeric',
		month: 'long',
		year: 'numeric'
	})
---

{
	webmentions.length > 0 ? (
		<section aria-label='Webmentions'>
			<h2>Webmentions</h2>

			<ul>
				{webmentions.map((webmention: WebmentionProps) => (
					<li>
						<div class='avatar-and-author'>
							{console.log(webmention.author)}
							{webmention.author.type}
							{webmention.author.name}

							{webmention.author.photo ? (
								<Image alt='' height='50' src={webmention.author.photo} width='50' />
							) : null}
							<a href={webmention.author.url} rel='author'>
								{webmention.author.name}
							</a>
						</div>
						<div class='information'>
							{webmention['wm-property'] === 'like-of' ? (
								<p>
									Liked on
									<time aria-hidden='true' datetime={webmention['wm-received']}>
										{showDate(webmention['wm-received'])}
									</time>
								</p>
							) : null}
							{webmention['wm-property'] === 'repost-of' ? (
								<p>
									Reposted on
									<time aria-hidden='true' datetime={webmention['wm-received']}>
										{showDate(webmention['wm-received'])}
									</time>
								</p>
							) : null}
						</div>
					</li>
				))}
			</ul>
		</section>
	) : null
}
