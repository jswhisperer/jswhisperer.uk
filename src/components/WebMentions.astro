---
import { Image } from 'astro:assets'

import sanitizeHTML from 'sanitize-html'
const sanitize = (entry: { content: any }) => {
	const { content } = entry
	//if (content['content-type'] === 'text/html') {
	content.value = sanitizeHTML(content.value)
	//}
	return entry
}

interface AuthorProps {
	name: string
	photo: string
	url: string
}

interface WebmentionProps {
	author: AuthorProps
	'wm-received': string
	'wm-property': string
	content: any
}

interface Props {
	webmentions: WebmentionProps[]
}

const { webmentions } = Astro.props

const showDate = (webmention: string) =>
	new Date(webmention).toLocaleDateString(undefined, {
		day: 'numeric',
		month: 'long',
		year: 'numeric'
	})
---

{
	webmentions.length > 0 ? (
		<section aria-label='Webmentions'>
			<h2>Webmentions</h2>

			<ul>
				{webmentions.map((webmention: WebmentionProps) => (
					<li>
						<div class='avatar-and-author '>
							{console.log(webmention.author)}
							<a href={webmention.author.url} rel='author'>
								{webmention.author.photo ? (
									<Image
										alt={webmention.author.name}
										title={webmention.author.name}
										class='avatar'
										height='50'
										src={webmention.author.photo}
										width='50'
									/>
								) : null}
							</a>
						</div>
						<div class='information'>
							{webmention['wm-property'] === 'like-of' && (
								<p>
									Liked on
									<time aria-hidden='true' datetime={webmention['wm-received']}>
										{showDate(webmention['wm-received'])}
									</time>
								</p>
							)}

							{Object.prototype.toString.call(webmention['content']) === '[object Object]' &&
								Object.keys(webmention['content']).map((key) => (
									<div key={key} set:html={sanitizeHTML(webmention['content'][key])} />
								))}
							{webmention['wm-property'] === 'repost-of' ? (
								<p>
									Reposted on
									<time aria-hidden='true' datetime={webmention['wm-received']}>
										{showDate(webmention['wm-received'])}
									</time>
								</p>
							) : null}
						</div>
					</li>
				))}
			</ul>
		</section>
	) : null
}
<style>
	.avatar {
		border-radius: 50%;
		overflow: hidden;
	}
</style>
