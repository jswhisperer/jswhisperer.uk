---
import { Image, Picture } from 'astro:assets'

import authorphoto from '@/assets/images/greg.jpeg'
import sanitizeHTML from 'sanitize-html'

const theUrl = Astro.url

const sanitize = (entry: { content: { value: string; 'content-type'?: string } }) => {
	const { content } = entry
	//if (content['content-type'] === 'text/html') {
	content.value = sanitizeHTML(content.value)
	//}
	return entry
}

interface AuthorProps {
	name: string
	photo: string
	url: string
}

interface WebmentionProps {
	author: AuthorProps
	'wm-received': string
	'wm-property': string
	content: {
		text?: string
		value?: string
		'content-type'?: string
	}
}

interface Props {
	webmentions: WebmentionProps[]
}

const { webmentions } = Astro.props

const showDate = (webmention: string) =>
	new Date(webmention).toLocaleDateString(undefined, {
		day: 'numeric',
		month: 'long',
		year: 'numeric'
	})
---

{
	webmentions.length ? (
		<>
			{/* <span itemprop='commentCount'>{webmentions.length}</span> */}

			<section
				aria-label='Webmentions'
				itemtype='https://schema.org/DiscussionForumPosting'
				itemscope
			>
				<div
					itemprop='interactionStatistic'
					itemscope
					itemtype='https://schema.org/InteractionCounter'
				>
					<span itemprop='userInteractionCount'>{webmentions.length}</span>{' '}
					<span itemprop='interactionType' content='https://schema.org/LikeAction'>
						likes
					</span>
				</div>
				<meta itemprop='mainEntityOfPage' content={theUrl} />
				<meta itemprop='url' content={theUrl} />
				<time itemprop='datePublished' datetime='2025-01-24T10:15:16Z' data-astro-cid-qesbhxo5>
					January 24, 2025
				</time>
				<h2 id='webmentions' itemprop='headline'>
					Webmentions
				</h2>

				<span itemprop='text'>lorem ipsum</span>
				<div
					itemprop='author'
					itemscope
					itemtype='https://schema.org/Person'
					class='avatar-and-author author u-author h-card'
				>
					<div itemprop='name'>greg</div>
					<a itemprop='url' href='https://jswhisperer.uk/author/greg' aria-label='author url'>
						{/* {webmention?.author?.photo && (
										<Picture
											alt={webmention.author.name}
											width={authorphoto.width}
											height={authorphoto.height}
											src={authorphoto.src}
											fit='cover'
										/>
									)} */}
					</a>
				</div>

				<ul itemscope itemtype='https://schema.org/CreativeWork'>
					{webmentions.map((webmention: WebmentionProps) => (
						<li
							aria-label='Comment'
							style='align-items: center;'
							itemscope
							itemtype='http://schema.org/Comment'
						>
							<small>
								<time
									itemprop='datePublished'
									content={webmention['wm-received']}
									datetime={webmention['wm-received']}
								>
									{showDate(webmention['wm-received'])}
								</time>
							</small>
							<div
								itemprop='author'
								itemscope
								itemtype='https://schema.org/Person'
								class='avatar-and-author author u-author h-card'
							>
								<div itemprop='name'>{webmention.author.name || 'greg'}</div>
								<a
									itemprop='url'
									href={webmention.author.url || 'https://jswhisperer.uk/author/greg'}
									aria-label='author url'
								>
									{webmention?.author?.photo && (
										<Picture
											alt={webmention.author.name}
											width={authorphoto.width}
											height={authorphoto.height}
											src={authorphoto.src}
											fit='cover'
										/>
									)}
								</a>
							</div>
							<div class='information'>
								{/* {webmention['wm-property']} */}
								{webmention['wm-property'] === 'like-of' && (
									<div class='flexx' itemprop='text'>
										Liked on:
										<time datetime={webmention['wm-received']}>
											{showDate(webmention['wm-received'])}
										</time>
									</div>
								)}
								{webmention['wm-property'] === 'in-reply-to' ? (
									<div class='flexx r' style='align-items: center;'>
										<p>
											replied on:{' '}
											<time datetime={webmention['wm-received']}>
												{showDate(webmention['wm-received'])}
											</time>
										</p>
										<blockquote
											itemprop='text'
											set:html={sanitizeHTML(webmention['content']['text'])}
										/>
									</div>
								) : null}
								{webmention['wm-property'] === 'repost-of' ? (
									<p itemprop='text'>
										Reposted on{' '}
										<time datetime={webmention['wm-received']}>
											{showDate(webmention['wm-received'])}
										</time>
									</p>
								) : null}
								{webmention['wm-property'] === 'mention-of' ? (
									<p itemprop='text'>
										mentioned on{' '}
										<time datetime={webmention['wm-received']}>
											{showDate(webmention['wm-received'])}
										</time>
									</p>
								) : null}
							</div>
						</li>
					))}
				</ul>
			</section>
		</>
	) : null
}
<style is:inline>
	.avatar {
		width: 50px;

		height: 50px;
		border-radius: 50%;
		overflow: hidden;
	}
</style>
