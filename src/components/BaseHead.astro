---
import { ViewTransitions } from "astro:transitions";
import { pwaInfo } from "virtual:pwa-info";
import { siteConfig } from "@/site-config";
import { SEO } from "astro-seo";
import { pwaAssetsHead } from "virtual:pwa-assets/head";

const {
  title = siteConfig.title,
  description = siteConfig.description,
  ogImage = siteConfig.ogImage,
  articleDate = new Date(),
} = Astro.props;

const canonicalURL = new URL(Astro?.url?.pathname, Astro.site);

const socialImageURL =
  "https://jswhisperer.uk/assets/images/7b6ld2c3bl65co0l6d5t.png";

export interface Props {
  title: string;
  description?: string;
  ogImage?: string | undefined;
  articleDate?: string | undefined;
}

const titleSeparator = "â€¢";

const siteTitle = `${title} ${titleSeparator} ${siteConfig.title}`;

const username = "jswhisperer";

import { join } from "path";
import { AstroFont } from "astro-font";
const atomFeed = "/atom.xml";


---

<!-- start webpushr code --> 
<script is:inline defer>
  (function(w,d, s, id) {if(typeof(w.webpushr)!=='undefined') return;w.webpushr=w.webpushr||function(){(w.webpushr.q=w.webpushr.q||[]).push(arguments)};var js, fjs = d.getElementsByTagName(s)[0];js = d.createElement(s); js.id = id;js.async=1;js.src = "https://cdn.webpushr.com/app.min.js";fjs.parentNode.appendChild(js);}(window,document, 'script', 'webpushr-jssdk'));webpushr('setup',{'key':'BFlSYhLvXiTFakbg0ixlBKs6b7gDwuqwjnNY5kwvOWTLW3FGBPecsEziwpA5GC5XmZwTh2d7_k_qg-IQFsS05FE' });</script><!-- end webpushr code -->

<!-- Global Metadata -->
<meta name="viewport" content="width=device-width, initial-scale=1" />
<!-- <link rel="icon" href="/favicon.ico" /> -->
<meta name="generator" content={Astro.generator} />
<link rel="pingback" href="https://webmention.io/jswhisperer.uk/xmlrpc" />
<link rel="webmention" href="https://webmention.io/jswhisperer.uk/webmention" />
<link rel="preconnect" href="https://api-gateway.umami.dev" />
<!-- Keywords are now handled by the SEO component -->

{
  [
    `https://github.com/${username}`,
    `https://www.linkedin.com/in/${username}`,
    `https://bsky.app/profile/${username}.bsky.social`,
    `https://www.linkedin.com/in/${username}`,
    `https://dev.to/${username}`,
    `mailto:hello@${username}`,
    `https://x.com/${username}`,
  ].map((social) => <link rel="me" href={social + "/"} />)
}
<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL.toString().replace("/amp", "")} />

{pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}

<!-- Primary Meta Tags -->
<title>{siteTitle}</title>

<SEO
  title={siteTitle}
  description={description}
  openGraph={{
    basic: {
      title: title,
      type: articleDate ? "article" : "website",
      image: socialImageURL,
      url: Astro.url,
    },
    optional: {
      description: description,
      locale: siteConfig.ogLocale,
      siteName: siteConfig.title,
    },
    article: articleDate
      ? {
          publishedTime: articleDate.toString(),
          authors: [siteConfig.author],
        }
      : undefined,
    image: {
      alt: `${title} - Featured image`,
    },
  }}
  twitter={{
    card: "summary_large_image",
    site: `@${username}`,
    creator: `@${username}`,
    title: title,
    description: description,
    image: socialImageURL,
    imageAlt: `${title} - Featured image`,
  }}
  extend={{
    meta: [
      {
        name: "robots",
        content:
          "index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1",
      },
      {
        name: "googlebot",
        content:
          "index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1",
      },
      {
        name: "keywords",
        content:
          "software development, engineering, javascript, node, vue, web development",
      },
    ],
    link: [
      { rel: "sitemap", href: "/sitemap-index.xml" },
      {
        rel: "alternate",
        type: "application/rss+xml",
        href: "/rss.xml",
        title: siteConfig.title,
      },
    ],
  }}
/>

<!-- ViewTransitions  -->

<!-- SEO -->
<meta name="title" content={siteTitle} />
<meta name="description" content={description} />
<meta name="author" content={siteConfig.author} />
<!-- SEO meta tags are now handled by the SEO component -->

<!-- <script>
  if ("serviceWorker" in navigator) {
    navigator.serviceWorker.register(
      import.meta.env.MODE === "production" ? "/my-sw.js" : "/dev-sw.js?dev-sw",
      { type: import.meta.env.MODE === "production" ? "classic" : "module" },
    );
  }
</script> -->

<script>
  import { registerSW } from "virtual:pwa-register";

  registerSW({
    immediate: true,
    onRegisteredSW(swScriptUrl) {
      console.log("SW registered: ", swScriptUrl);
    },
    onOfflineReady() {
      console.log("PWA application ready to work offline");
    },
  });

  
</script>

<!-- Cloudflare Web Analytics -->
<script
 is:raw
  defer
  src="https://static.cloudflareinsights.com/beacon.min.js"
  data-cf-beacon='{"token": "cbca560476c24c1e91d00c93a7f8501c"}'
></script><!-- End Cloudflare Web Analytics -->



  <script is:inline defer>
    self.addEventListener('push', (event) => {
  const payload = event.data.text(); // Get the push message data
  // ... Display a notification using the Notification API
  event.waitUntil(
    self.registration.showNotification('Web Push', {
      body: payload,
      icon: 'icon.png', // Optional:  icon for the notification
    })
  );
});


    </script>

<!-- Open Graph / Facebook -->
<meta property="og:type" content={articleDate ? "article" : "website"} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={socialImageURL} />
{
  articleDate && (
    <>
      <meta property="article:author" content={siteConfig.author} />
      <meta
        property="article:published_time"
        content={articleDate.toString()}
      />
    </>
  )
}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={socialImageURL} />

<!-- RSS auto-discovery -->
<link
  rel="alternate"
  type="application/rss+xml"
  title={siteConfig.title}
  href="/rss.xml"
/>

<link rel="alternate" type="application/atom+xml" href="/rss.xml" />

<script
  is:raw
  defer
  src="https://cloud.umami.is/script.js"
  data-website-id="5d86b231-4cb5-49e5-8d7a-707e3f5ba0c7"></script>

<!-- pwa assets -->
<style is:global>
  @import url("./styles/global.css");
</style>

<AstroFont
  config={[
    {
      preload: true,
      display: "swap",
      name: "MuncieRegular",
      fallback: "sans-serif",
      src: [
        {
          weight: "400",
          style: "normal",
          path: join(process.cwd(), "public", "fonts", "muncie-webfont.woff"),
        },
      ],
    },
    {
      preload: true,
      display: "swap",
      name: "gregasaurus",
      fallback: "sans-serif",
      src: [
        {
          weight: "400",
          style: "normal",
          path: join(process.cwd(), "public", "fonts", "gregasaurus.woff"),
        },
      ],
    },
    {
      preload: false,
      display: "swap",
      name: "Manrope",
      fallback: "sans-serif",
      src: [
        {
          weight: "200",
          style: "normal",
          path: join(
            process.cwd(),
            "public",
            "fonts",
            "Manrope-ExtraLight.woff2",
          ),
        },
        {
          weight: "300",
          style: "normal",
          path: join(process.cwd(), "public", "fonts", "Manrope-Light.woff2"),
        },
        {
          weight: "400",
          style: "normal",
          path: join(process.cwd(), "public", "fonts", "Manrope-Regular.woff2"),
        },
        {
          weight: "500",
          style: "normal",
          path: join(process.cwd(), "public", "fonts", "Manrope-Medium.woff2"),
        },
        {
          weight: "600",
          style: "normal",
          path: join(
            process.cwd(),
            "public",
            "fonts",
            "Manrope-SemiBold.woff2",
          ),
        },
        {
          weight: "700",
          style: "normal",
          path: join(process.cwd(), "public", "fonts", "Manrope-Bold.woff2"),
        },
        {
          weight: "800",
          style: "normal",
          path: join(
            process.cwd(),
            "public",
            "fonts",
            "Manrope-ExtraBold.woff2",
          ),
        },
      ],
    },
  ]}
/>
