---
import { siteConfig } from '@/site-config'
import { SEO } from 'astro-seo'
import { pwaInfo } from 'virtual:pwa-info'

const {
	title = siteConfig.title,
	description = siteConfig.description,
	ogImage = siteConfig.ogImage,
	articleDate = new Date()
} = Astro.props

const canonicalURL = new URL(Astro?.url?.pathname, Astro.site)
const socialImageURL = 'https://jswhisperer.uk/assets/images/7b6ld2c3bl65co0l6d5t.png'

export interface Props {
	title: string
	description?: string
	ogImage?: string | undefined
	articleDate?: string | undefined
}

const titleSeparator = 'â€¢'

const siteTitle = `${title} ${titleSeparator} ${siteConfig.title}`

const username = 'jswhisperer'

import { AstroFont } from 'astro-font'
import { join } from 'path'
const atomFeed = '/atom.xml'
---

<!-- Global Metadata -->
<meta name='viewport' content='width=device-width, initial-scale=1' />

<link rel='icon' href='/favicon.ico' />
<meta name='generator' content={Astro.generator} />
<link rel='pingback' href='https://webmention.io/jswhisperer.uk/xmlrpc' />
<link rel='webmention' href='https://webmention.io/jswhisperer.uk/webmention' />
<link rel='preconnect' href='https://api-gateway.umami.dev' />
<meta name='keywords' content='software development, engineering, javascript, node, vue' />

{
	[
		`https://github.com/${username}`,
		`https://www.linkedin.com/in/${username}`,
		`https://bsky.app/profile/${username}.bsky.social`,
		`https://www.linkedin.com/in/${username}`,
		`https://dev.to/${username}`,
		`mailto:hello@${username}`,
		`https://x.com/${username}`
	].map((social) => <link rel='me' href={social + '/'} />)
}
<!-- Canonical URL -->
<link rel='canonical' href={canonicalURL.toString().replace('/amp', '')} />

{pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}

<!-- Primary Meta Tags -->
<title>{siteTitle}</title>

<SEO title={siteTitle} description={description} />

<!-- ViewTransitions  -->

<!-- SEO -->
<meta name='title' content={siteTitle} />
<meta name='description' content={description} />
<meta name='author' content={siteConfig.author} />
<!-- <script type='module' src='/sw.js'></script> -->
<meta
	name='googlebot-news'
	content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1'
/>

<!-- <script>
	if ('serviceWorker' in navigator) {
		navigator.serviceWorker.register(
			import.meta.env.MODE === 'production' ? '/sw.js' : '/dev-sw.js?dev-sw',
			{ type: import.meta.env.MODE === 'production' ? 'classic' : 'module' }
		)
	}
</script> -->

<!-- Open Graph / Facebook -->
<meta property='og:type' content={articleDate ? 'article' : 'website'} />
<meta property='og:url' content={Astro.url} />
<meta property='og:title' content={title} />
<meta property='og:description' content={description} />
<meta property='og:image' content={socialImageURL} />
{
	articleDate && (
		<>
			<meta property='article:author' content={siteConfig.author} />
			<meta property='article:published_time' content={articleDate.toString()} />
		</>
	)
}

<!-- Twitter -->
<meta property='twitter:card' content='summary_large_image' />
<meta property='twitter:url' content={Astro.url} />
<meta property='twitter:title' content={title} />
<meta property='twitter:description' content={description} />
<meta property='twitter:image' content={socialImageURL} />

<!-- RSS auto-discovery -->
<link rel='alternate' type='application/rss+xml' title={siteConfig.title} href='/rss.xml' />

<link rel='alternate' type='application/atom+xml' href='/rss.xml' />

<!-- <script
	is:raw
	defer
	src='https://cloud.umami.is/script.js'
	data-website-id='5d86b231-4cb5-49e5-8d7a-707e3f5ba0c7'></script> -->

<!-- <style is:global>
	@import url('/styles/global.css');
</style> -->

<AstroFont
	config={[
		{
			preload: true,
			display: 'swap',
			name: 'MuncieRegular',
			fallback: 'sans-serif',
			src: [
				{
					weight: '400',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'muncie-webfont.woff')
				}
			]
		},
		{
			preload: true,
			display: 'swap',
			name: 'gregasaurus',
			fallback: 'sans-serif',
			src: [
				{
					weight: '400',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'gregasaurus.woff')
				}
			]
		},
		{
			preload: false,
			display: 'swap',
			name: 'Manrope',
			fallback: 'sans-serif',
			src: [
				{
					weight: '200',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Manrope-ExtraLight.woff2')
				},
				{
					weight: '300',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Manrope-Light.woff2')
				},
				{
					weight: '400',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Manrope-Regular.woff2')
				},
				{
					weight: '500',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Manrope-Medium.woff2')
				},
				{
					weight: '600',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Manrope-SemiBold.woff2')
				},
				{
					weight: '700',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Manrope-Bold.woff2')
				},
				{
					weight: '800',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Manrope-ExtraBold.woff2')
				}
			]
		}
	]}
/>
